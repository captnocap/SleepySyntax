// ===== SLEEPY COMPONENT LIBRARY =====
// Complete UI component library with custom styling
// Following the pattern: { component: [...], component$styles: [...] }

// ===== DESIGN TOKENS =====
{
  design_tokens: [
    colors: (
      primary: #6366f1,
      primaryHover: #5855eb,
      secondary: #8b5cf6,
      secondaryHover: #7c3aed,
      success: #10b981,
      successHover: #059669,
      warning: #f59e0b,
      warningHover: #d97706,
      danger: #ef4444,
      dangerHover: #dc2626,
      info: #3b82f6,
      infoHover: #2563eb,
      
      // Neutrals
      white: #ffffff,
      black: #000000,
      gray50: #f9fafb,
      gray100: #f3f4f6,
      gray200: #e5e7eb,
      gray300: #d1d5db,
      gray400: #9ca3af,
      gray500: #6b7280,
      gray600: #4b5563,
      gray700: #374151,
      gray800: #1f2937,
      gray900: #111827,
      
      // Dark theme
      dark: #0f172a,
      darkSurface: #1e293b,
      darkBorder: #334155,
      darkText: #f1f5f9,
      darkTextSecondary: #94a3b8
    ),
    
    spacing: (
      xs: 4px,
      sm: 8px,
      md: 16px,
      lg: 24px,
      xl: 32px,
      xxl: 48px,
      xxxl: 64px
    ),
    
    borderRadius: (
      none: 0,
      sm: 4px,
      md: 8px,
      lg: 12px,
      xl: 16px,
      full: 9999px
    ),
    
    shadows: (
      sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
      md: "0 4px 6px -1px rgba(0, 0, 0, 0.1)",
      lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1)",
      xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1)",
      inner: "inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)"
    ),
    
    typography: (
      fontFamily: "Inter, system-ui, sans-serif",
      fontSize: (
        xs: 12px,
        sm: 14px,
        base: 16px,
        lg: 18px,
        xl: 20px,
        xxl: 24px,
        xxxl: 30px,
        xxxxl: 36px
      ),
      fontWeight: (
        light: 300,
        normal: 400,
        medium: 500,
        semibold: 600,
        bold: 700,
        extrabold: 800
      )
    )
  ]
}

// ===== BASIC COMPONENTS =====

// Button Component
{
  button: [
    button: (
      text: api.button.text || "Button",
      variant: api.button.variant || "primary",
      size: api.button.size || "medium",
      disabled: api.button.disabled || false,
      loading: api.button.loading || false,
      leftIcon: api.button.leftIcon,
      rightIcon: api.button.rightIcon,
      onClick: api.button.onClick
    )
  ]
}

{
  button$styles: [
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    fontWeight: 500,
    borderRadius: 8px,
    border: "none",
    cursor: "pointer",
    transition: "all 0.2s ease-in-out",
    fontFamily: "Inter, sans-serif",
    textDecoration: "none",
    
    // Variants
    &primary: [
      backgroundColor: #6366f1,
      color: #ffffff,
      "&:hover": [
        backgroundColor: #5855eb,
        transform: "translateY(-1px)"
      ],
      "&:active": [
        transform: "translateY(0)"
      ]
    ],
    
    &secondary: [
      backgroundColor: #f1f5f9,
      color: #334155,
      border: "1px solid #e2e8f0",
      "&:hover": [
        backgroundColor: #e2e8f0,
        borderColor: #cbd5e1
      ]
    ],
    
    &success: [
      backgroundColor: #10b981,
      color: #ffffff,
      "&:hover": [
        backgroundColor: #059669
      ]
    ],
    
    &warning: [
      backgroundColor: #f59e0b,
      color: #ffffff,
      "&:hover": [
        backgroundColor: #d97706
      ]
    ],
    
    &danger: [
      backgroundColor: #ef4444,
      color: #ffffff,
      "&:hover": [
        backgroundColor: #dc2626
      ]
    ],
    
    &ghost: [
      backgroundColor: "transparent",
      color: #6366f1,
      border: "1px solid transparent",
      "&:hover": [
        backgroundColor: #f8fafc,
        borderColor: #e2e8f0
      ]
    ],
    
    &outline: [
      backgroundColor: "transparent",
      color: #6366f1,
      border: "1px solid #6366f1",
      "&:hover": [
        backgroundColor: #6366f1,
        color: #ffffff
      ]
    ],
    
    // Sizes
    &small: [
      padding: "6px 12px",
      fontSize: 14px,
      minHeight: 32px
    ],
    
    &medium: [
      padding: "10px 16px",
      fontSize: 16px,
      minHeight: 40px
    ],
    
    &large: [
      padding: "12px 24px",
      fontSize: 18px,
      minHeight: 48px
    ],
    
    // States
    "&:disabled": [
      opacity: 0.5,
      cursor: "not-allowed",
      transform: "none !important"
    ],
    
    &loading: [
      cursor: "wait",
      opacity: 0.8
    ]
  ]
}

// Input Component
{
  input: [
    div$input-wrapper: [
      if: api.input.label: [
        label: (
          text: api.input.label,
          required: api.input.required
        )
      ],
      input: (
        type: api.input.type || "text",
        placeholder: api.input.placeholder,
        value: api.input.value,
        disabled: api.input.disabled,
        error: api.input.error,
        leftIcon: api.input.leftIcon,
        rightIcon: api.input.rightIcon
      ),
      if: api.input.helperText: [
        small$helper: api.input.helperText
      ],
      if: api.input.error: [
        small$error: api.input.error
      ]
    ]
  ]
}

{
  input$styles: [
    div$input-wrapper: [
      display: "flex",
      flexDirection: "column",
      gap: 6px,
      width: "100%"
    ],
    
    label: [
      fontSize: 14px,
      fontWeight: 500,
      color: #374151,
      "&::after": [
        content: api.input.required ? " *" : "",
        color: #ef4444
      ]
    ],
    
    input: [
      width: "100%",
      padding: "10px 12px",
      border: "1px solid #d1d5db",
      borderRadius: 8px,
      fontSize: 16px,
      backgroundColor: #ffffff,
      color: #111827,
      transition: "all 0.2s ease-in-out",
      
      "&:focus": [
        outline: "none",
        borderColor: #6366f1,
        boxShadow: "0 0 0 3px rgba(99, 102, 241, 0.1)"
      ],
      
      "&:disabled": [
        backgroundColor: #f9fafb,
        color: #9ca3af,
        cursor: "not-allowed"
      ],
      
      "&::placeholder": [
        color: #9ca3af
      ],
      
      &error: [
        borderColor: #ef4444,
        "&:focus": [
          borderColor: #ef4444,
          boxShadow: "0 0 0 3px rgba(239, 68, 68, 0.1)"
        ]
      ]
    ],
    
    small$helper: [
      fontSize: 12px,
      color: #6b7280
    ],
    
    small$error: [
      fontSize: 12px,
      color: #ef4444
    ]
  ]
}

// Card Component
{
  card: [
    div$card: [
      if: api.card.header: [
        div$card-header: [
          if: api.card.title: [
            h3: api.card.title
          ],
          if: api.card.subtitle: [
            p: api.card.subtitle
          ],
          if: api.card.actions: [
            div$card-actions: api.card.actions
          ]
        ]
      ],
      div$card-content: [
        api.card.children || api.card.content
      ],
      if: api.card.footer: [
        div$card-footer: api.card.footer
      ]
    ]
  ]
}

{
  card$styles: [
    div$card: [
      backgroundColor: #ffffff,
      border: "1px solid #e5e7eb",
      borderRadius: 12px,
      boxShadow: "0 1px 3px 0 rgba(0, 0, 0, 0.1)",
      overflow: "hidden",
      transition: "all 0.2s ease-in-out",
      
      "&:hover": [
        boxShadow: "0 4px 6px -1px rgba(0, 0, 0, 0.1)",
        transform: "translateY(-2px)"
      ]
    ],
    
    div$card-header: [
      padding: "20px 24px 16px",
      borderBottom: "1px solid #f3f4f6",
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between"
    ],
    
    div$card-content: [
      padding: "20px 24px"
    ],
    
    div$card-footer: [
      padding: "16px 24px 20px",
      borderTop: "1px solid #f3f4f6",
      backgroundColor: #f9fafb
    ],
    
    h3: [
      fontSize: 18px,
      fontWeight: 600,
      color: #111827,
      margin: 0
    ],
    
    p: [
      fontSize: 14px,
      color: #6b7280,
      margin: "4px 0 0 0"
    ]
  ]
}

// Modal Component
{
  modal: [
    if: api.modal.isOpen: [
      div$modal-overlay: [
        div$modal-content: [
          div$modal-header: [
            h2: api.modal.title,
            button$modal-close: "Ã—"
          ],
          div$modal-body: [
            api.modal.children || api.modal.content
          ],
          if: api.modal.footer: [
            div$modal-footer: api.modal.footer
          ]
        ]
      ]
    ]
  ]
}

{
  modal$styles: [
    div$modal-overlay: [
      position: "fixed",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: "rgba(0, 0, 0, 0.5)",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      zIndex: 1000,
      animation: "fadeIn 0.2s ease-out"
    ],
    
    div$modal-content: [
      backgroundColor: #ffffff,
      borderRadius: 12px,
      boxShadow: "0 20px 25px -5px rgba(0, 0, 0, 0.1)",
      maxWidth: "500px",
      width: "90%",
      maxHeight: "90vh",
      overflow: "hidden",
      animation: "slideIn 0.3s ease-out"
    ],
    
    div$modal-header: [
      padding: "20px 24px",
      borderBottom: "1px solid #f3f4f6",
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between"
    ],
    
    div$modal-body: [
      padding: "24px",
      maxHeight: "60vh",
      overflowY: "auto"
    ],
    
    div$modal-footer: [
      padding: "16px 24px 24px",
      borderTop: "1px solid #f3f4f6",
      display: "flex",
      justifyContent: "flex-end",
      gap: 12px
    ],
    
    h2: [
      fontSize: 20px,
      fontWeight: 600,
      color: #111827,
      margin: 0
    ],
    
    button$modal-close: [
      backgroundColor: "transparent",
      border: "none",
      fontSize: 24px,
      color: #9ca3af,
      cursor: "pointer",
      padding: 4px,
      "&:hover": [
        color: #374151
      ]
    ]
  ]
}

// Tabs Component
{
  tabs: [
    div$tabs-container: [
      div$tabs-list: [
        forEach: api.tabs.items: [
          button$tab: [
            text: item.label,
            active: item.active,
            onClick: api.tabs.onChange(item.id)
          ]
        ]
      ],
      div$tabs-content: [
        forEach: api.tabs.items: [
          if: item.active: [
            div$tab-panel: item.content
          ]
        ]
      ]
    ]
  ]
}

{
  tabs$styles: [
    div$tabs-container: [
      width: "100%"
    ],
    
    div$tabs-list: [
      display: "flex",
      borderBottom: "1px solid #e5e7eb",
      marginBottom: 20px
    ],
    
    button$tab: [
      padding: "12px 16px",
      border: "none",
      backgroundColor: "transparent",
      color: #6b7280,
      fontSize: 14px,
      fontWeight: 500,
      cursor: "pointer",
      borderBottom: "2px solid transparent",
      transition: "all 0.2s ease-in-out",
      
      "&:hover": [
        color: #374151
      ],
      
      &active: [
        color: #6366f1,
        borderBottomColor: #6366f1
      ]
    ],
    
    div$tab-panel: [
      animation: "fadeIn 0.2s ease-in-out"
    ]
  ]
}

// Badge Component
{
  badge: [
    span$badge: [
      text: api.badge.text,
      variant: api.badge.variant || "default",
      size: api.badge.size || "medium"
    ]
  ]
}

{
  badge$styles: [
    span$badge: [
      display: "inline-flex",
      alignItems: "center",
      fontWeight: 500,
      borderRadius: 6px,
      textTransform: "uppercase",
      letterSpacing: "0.05em",
      
      // Variants
      &default: [
        backgroundColor: #f1f5f9,
        color: #475569
      ],
      
      &primary: [
        backgroundColor: #ddd6fe,
        color: #6366f1
      ],
      
      &success: [
        backgroundColor: #d1fae5,
        color: #059669
      ],
      
      &warning: [
        backgroundColor: #fef3c7,
        color: #d97706
      ],
      
      &danger: [
        backgroundColor: #fee2e2,
        color: #dc2626
      ],
      
      &info: [
        backgroundColor: #dbeafe,
        color: #2563eb
      ],
      
      // Sizes
      &small: [
        padding: "2px 6px",
        fontSize: 10px
      ],
      
      &medium: [
        padding: "4px 8px",
        fontSize: 12px
      ],
      
      &large: [
        padding: "6px 12px",
        fontSize: 14px
      ]
    ]
  ]
}

// Avatar Component
{
  avatar: [
    div$avatar: [
      if: api.avatar.image: [
        img: (
          src: api.avatar.image,
          alt: api.avatar.name || "Avatar"
        )
      ],
      unless: api.avatar.image: [
        span$avatar-initials: get_initials(api.avatar.name || "U")
      ],
      if: api.avatar.status: [
        div$avatar-status: api.avatar.status
      ]
    ]
  ]
}

{
  avatar$styles: [
    div$avatar: [
      position: "relative",
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      borderRadius: "50%",
      overflow: "hidden",
      backgroundColor: #f3f4f6,
      
      // Sizes
      &small: [
        width: 32px,
        height: 32px
      ],
      
      &medium: [
        width: 40px,
        height: 40px
      ],
      
      &large: [
        width: 48px,
        height: 48px
      ],
      
      &xlarge: [
        width: 64px,
        height: 64px
      ]
    ],
    
    img: [
      width: "100%",
      height: "100%",
      objectFit: "cover"
    ],
    
    span$avatar-initials: [
      fontSize: 14px,
      fontWeight: 600,
      color: #374151
    ],
    
    div$avatar-status: [
      position: "absolute",
      bottom: 0,
      right: 0,
      width: 12px,
      height: 12px,
      borderRadius: "50%",
      border: "2px solid white",
      
      &online: [
        backgroundColor: #10b981
      ],
      
      &offline: [
        backgroundColor: #9ca3af
      ],
      
      &busy: [
        backgroundColor: #f59e0b
      ],
      
      &away: [
        backgroundColor: #6b7280
      ]
    ]
  ]
}

// Progress Component
{
  progress: [
    div$progress-container: [
      if: api.progress.label: [
        div$progress-header: [
          span: api.progress.label,
          span$progress-value: api.progress.value + "%"
        ]
      ],
      div$progress-bar: [
        div$progress-fill: [
          width: api.progress.value + "%"
        ]
      ]
    ]
  ]
}

{
  progress$styles: [
    div$progress-container: [
      width: "100%"
    ],
    
    div$progress-header: [
      display: "flex",
      justifyContent: "space-between",
      alignItems: "center",
      marginBottom: 8px,
      fontSize: 14px,
      color: #374151
    ],
    
    span$progress-value: [
      fontWeight: 600,
      color: #6366f1
    ],
    
    div$progress-bar: [
      width: "100%",
      height: 8px,
      backgroundColor: #f3f4f6,
      borderRadius: 4px,
      overflow: "hidden"
    ],
    
    div$progress-fill: [
      height: "100%",
      backgroundColor: #6366f1,
      borderRadius: 4px,
      transition: "width 0.3s ease-in-out"
    ]
  ]
}

// Alert Component
{
  alert: [
    div$alert: [
      div$alert-icon: [
        if: api.alert.variant == "success": "âœ“",
        if: api.alert.variant == "warning": "âš ",
        if: api.alert.variant == "danger": "âœ•",
        if: api.alert.variant == "info": "â„¹"
      ],
      div$alert-content: [
        if: api.alert.title: [
          h4: api.alert.title
        ],
        p: api.alert.message
      ],
      if: api.alert.dismissible: [
        button$alert-close: "Ã—"
      ]
    ]
  ]
}

{
  alert$styles: [
    div$alert: [
      display: "flex",
      alignItems: "flex-start",
      gap: 12px,
      padding: 16px,
      borderRadius: 8px,
      border: "1px solid",
      
      &success: [
        backgroundColor: #f0fdf4,
        borderColor: #bbf7d0,
        color: #166534
      ],
      
      &warning: [
        backgroundColor: #fffbeb,
        borderColor: #fed7aa,
        color: #92400e
      ],
      
      &danger: [
        backgroundColor: #fef2f2,
        borderColor: #fecaca,
        color: #991b1b
      ],
      
      &info: [
        backgroundColor: #eff6ff,
        borderColor: #bfdbfe,
        color: #1d4ed8
      ]
    ],
    
    div$alert-icon: [
      fontSize: 16px,
      fontWeight: "bold",
      marginTop: 2px
    ],
    
    div$alert-content: [
      flex: 1
    ],
    
    h4: [
      fontSize: 14px,
      fontWeight: 600,
      margin: "0 0 4px 0"
    ],
    
    p: [
      fontSize: 14px,
      margin: 0,
      lineHeight: 1.5
    ],
    
    button$alert-close: [
      backgroundColor: "transparent",
      border: "none",
      fontSize: 18px,
      cursor: "pointer",
      color: "inherit",
      opacity: 0.7,
      "&:hover": [
        opacity: 1
      ]
    ]
  ]
}

// Dropdown/Select Component
{
  dropdown: [
    div$dropdown-container: [
      if: api.dropdown.label: [
        label: api.dropdown.label
      ],
      div$dropdown-trigger: [
        button$dropdown-button: [
          span: api.dropdown.selected?.label || api.dropdown.placeholder || "Select option",
          span$dropdown-arrow: "â–¼"
        ]
      ],
      if: api.dropdown.isOpen: [
        div$dropdown-menu: [
          forEach: api.dropdown.options: [
            button$dropdown-item: [
              text: item.label,
              selected: item.selected,
              onClick: api.dropdown.onSelect(item)
            ]
          ]
        ]
      ]
    ]
  ]
}

{
  dropdown$styles: [
    div$dropdown-container: [
      position: "relative",
      width: "100%"
    ],
    
    label: [
      display: "block",
      fontSize: 14px,
      fontWeight: 500,
      color: #374151,
      marginBottom: 6px
    ],
    
    button$dropdown-button: [
      width: "100%",
      padding: "10px 12px",
      border: "1px solid #d1d5db",
      borderRadius: 8px,
      backgroundColor: #ffffff,
      color: #111827,
      fontSize: 16px,
      textAlign: "left",
      cursor: "pointer",
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      
      "&:focus": [
        outline: "none",
        borderColor: #6366f1,
        boxShadow: "0 0 0 3px rgba(99, 102, 241, 0.1)"
      ]
    ],
    
    span$dropdown-arrow: [
      fontSize: 12px,
      transition: "transform 0.2s ease-in-out"
    ],
    
    div$dropdown-menu: [
      position: "absolute",
      top: "100%",
      left: 0,
      right: 0,
      backgroundColor: #ffffff,
      border: "1px solid #e5e7eb",
      borderRadius: 8px,
      boxShadow: "0 10px 15px -3px rgba(0, 0, 0, 0.1)",
      zIndex: 10,
      marginTop: 4px,
      maxHeight: 200px,
      overflowY: "auto"
    ],
    
    button$dropdown-item: [
      width: "100%",
      padding: "10px 12px",
      border: "none",
      backgroundColor: "transparent",
      color: #374151,
      fontSize: 14px,
      textAlign: "left",
      cursor: "pointer",
      
      "&:hover": [
        backgroundColor: #f9fafb
      ],
      
      &selected: [
        backgroundColor: #f0f9ff,
        color: #0ea5e9
      ]
    ]
  ]
}

// Toast/Notification Component
{
  toast: [
    div$toast-container: [
      forEach: api.toasts.list: [
        div$toast: [
          div$toast-icon: [
            if: item.type == "success": "âœ“",
            if: item.type == "error": "âœ•",
            if: item.type == "warning": "âš ",
            if: item.type == "info": "â„¹"
          ],
          div$toast-content: [
            if: item.title: [
              h4: item.title
            ],
            p: item.message
          ],
          button$toast-close: [
            text: "Ã—",
            onClick: api.toasts.dismiss(item.id)
          ]
        ]
      ]
    ]
  ]
}

{
  toast$styles: [
    div$toast-container: [
      position: "fixed",
      top: 20px,
      right: 20px,
      zIndex: 1000,
      display: "flex",
      flexDirection: "column",
      gap: 12px,
      maxWidth: 400px
    ],
    
    div$toast: [
      display: "flex",
      alignItems: "flex-start",
      gap: 12px,
      padding: 16px,
      backgroundColor: #ffffff,
      border: "1px solid #e5e7eb",
      borderRadius: 8px,
      boxShadow: "0 10px 15px -3px rgba(0, 0, 0, 0.1)",
      animation: "slideInRight 0.3s ease-out",
      
      &success: [
        borderLeftColor: #10b981,
        borderLeftWidth: 4px
      ],
      
      &error: [
        borderLeftColor: #ef4444,
        borderLeftWidth: 4px
      ],
      
      &warning: [
        borderLeftColor: #f59e0b,
        borderLeftWidth: 4px
      ],
      
      &info: [
        borderLeftColor: #3b82f6,
        borderLeftWidth: 4px
      ]
    ],
    
    div$toast-icon: [
      fontSize: 16px,
      fontWeight: "bold",
      marginTop: 2px,
      
      "&.success": [
        color: #10b981
      ],
      
      "&.error": [
        color: #ef4444
      ],
      
      "&.warning": [
        color: #f59e0b
      ],
      
      "&.info": [
        color: #3b82f6
      ]
    ],
    
    div$toast-content: [
      flex: 1
    ],
    
    h4: [
      fontSize: 14px,
      fontWeight: 600,
      margin: "0 0 4px 0",
      color: #111827
    ],
    
    p: [
      fontSize: 14px,
      margin: 0,
      color: #6b7280,
      lineHeight: 1.4
    ],
    
    button$toast-close: [
      backgroundColor: "transparent",
      border: "none",
      fontSize: 16px,
      color: #9ca3af,
      cursor: "pointer",
      padding: 2px,
      "&:hover": [
        color: #374151
      ]
    ]
  ]
}

// Skeleton Loader Component
{
  skeleton: [
    div$skeleton: [
      variant: api.skeleton.variant || "text",
      width: api.skeleton.width || "100%",
      height: api.skeleton.height || "auto",
      lines: api.skeleton.lines || 1
    ]
  ]
}

{
  skeleton$styles: [
    div$skeleton: [
      backgroundColor: #f3f4f6,
      borderRadius: 4px,
      animation: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
      
      &text: [
        height: 16px,
        marginBottom: 8px,
        "&:last-child": [
          marginBottom: 0
        ]
      ],
      
      &title: [
        height: 24px,
        marginBottom: 12px
      ],
      
      &avatar: [
        width: 40px,
        height: 40px,
        borderRadius: "50%"
      ],
      
      &button: [
        height: 40px,
        borderRadius: 8px
      ],
      
      &card: [
        height: 200px,
        borderRadius: 12px
      ]
    ]
  ]
}

// Toggle/Switch Component
{
  toggle: [
    label$toggle-label: [
      input$toggle-input: [
        type: "checkbox",
        checked: api.toggle.checked,
        onChange: api.toggle.onChange
      ],
      div$toggle-slider: [
        div$toggle-thumb: ""
      ],
      if: api.toggle.label: [
        span: api.toggle.label
      ]
    ]
  ]
}

{
  toggle$styles: [
    label$toggle-label: [
      display: "flex",
      alignItems: "center",
      gap: 12px,
      cursor: "pointer",
      fontSize: 14px,
      color: #374151
    ],
    
    input$toggle-input: [
      display: "none"
    ],
    
    div$toggle-slider: [
      position: "relative",
      width: 44px,
      height: 24px,
      backgroundColor: #e5e7eb,
      borderRadius: 12px,
      transition: "background-color 0.2s ease-in-out",
      
      "input:checked + &": [
        backgroundColor: #6366f1
      ]
    ],
    
    div$toggle-thumb: [
      position: "absolute",
      top: 2px,
      left: 2px,
      width: 20px,
      height: 20px,
      backgroundColor: #ffffff,
      borderRadius: "50%",
      boxShadow: "0 1px 3px rgba(0, 0, 0, 0.1)",
      transition: "transform 0.2s ease-in-out",
      
      "input:checked ~ * &": [
        transform: "translateX(20px)"
      ]
    ]
  ]
}

// Pagination Component
{
  pagination: [
    div$pagination: [
      button$pagination-prev: [
        text: "Previous",
        disabled: api.pagination.currentPage == 1,
        onClick: api.pagination.onPrevious
      ],
      div$pagination-pages: [
        forEach: api.pagination.pages: [
          button$pagination-page: [
            text: item.number,
            active: item.current,
            onClick: api.pagination.onPageChange(item.number)
          ]
        ]
      ],
      button$pagination-next: [
        text: "Next",
        disabled: api.pagination.currentPage == api.pagination.totalPages,
        onClick: api.pagination.onNext
      ]
    ]
  ]
}

{
  pagination$styles: [
    div$pagination: [
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      gap: 8px,
      marginTop: 24px
    ],
    
    button$pagination-prev,
    button$pagination-next: [
      padding: "8px 12px",
      border: "1px solid #e5e7eb",
      backgroundColor: #ffffff,
      color: #374151,
      fontSize: 14px,
      borderRadius: 6px,
      cursor: "pointer",
      
      "&:hover": [
        backgroundColor: #f9fafb
      ],
      
      "&:disabled": [
        color: #9ca3af,
        cursor: "not-allowed",
        "&:hover": [
          backgroundColor: #ffffff
        ]
      ]
    ],
    
    div$pagination-pages: [
      display: "flex",
      gap: 4px
    ],
    
    button$pagination-page: [
      width: 36px,
      height: 36px,
      border: "1px solid #e5e7eb",
      backgroundColor: #ffffff,
      color: #374151,
      fontSize: 14px,
      borderRadius: 6px,
      cursor: "pointer",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      
      "&:hover": [
        backgroundColor: #f9fafb
      ],
      
      &active: [
        backgroundColor: #6366f1,
        borderColor: #6366f1,
        color: #ffffff,
        "&:hover": [
          backgroundColor: #5855eb
        ]
      ]
    ]
  ]
}

// ===== ANIMATIONS =====
{
  animations$styles: [
    "@keyframes fadeIn": [
      from: [
        opacity: 0
      ],
      to: [
        opacity: 1
      ]
    ],
    
    "@keyframes slideIn": [
      from: [
        transform: "translateY(-20px)",
        opacity: 0
      ],
      to: [
        transform: "translateY(0)",
        opacity: 1
      ]
    ],
    
    "@keyframes slideInRight": [
      from: [
        transform: "translateX(100%)",
        opacity: 0
      ],
      to: [
        transform: "translateX(0)",
        opacity: 1
      ]
    ],
    
    "@keyframes pulse": [
      "0%, 100%": [
        opacity: 1
      ],
      "50%": [
        opacity: 0.5
      ]
    ],
    
    "@keyframes spin": [
      from: [
        transform: "rotate(0deg)"
      ],
      to: [
        transform: "rotate(360deg)"
      ]
    ]
  ]
}

// ===== UTILITY COMPONENTS =====
{
  spacer: [
    div$spacer: ""
  ]
}

{
  spacer$styles: [
    div$spacer: [
      flex: 1
    ]
  ]
}

{
  divider: [
    hr$divider: ""
  ]
}

{
  divider$styles: [
    hr$divider: [
      border: "none",
      height: 1px,
      backgroundColor: #e5e7eb,
      margin: "16px 0"
    ]
  ]
}

{
  container: [
    div$container: [
      children: api.container.children
    ]
  ]
}

{
  container$styles: [
    div$container: [
      maxWidth: 1200px,
      margin: "0 auto",
      padding: "0 20px"
    ]
  ]
}

// ===== LAYOUT COMPONENTS =====
{
  flex: [
    div$flex: [
      direction: api.flex.direction || "row",
      align: api.flex.align || "stretch",
      justify: api.flex.justify || "flex-start",
      gap: api.flex.gap || 0,
      wrap: api.flex.wrap || "nowrap",
      children: api.flex.children
    ]
  ]
}

{
  flex$styles: [
    div$flex: [
      display: "flex",
      
      &row: [
        flexDirection: "row"
      ],
      
      &column: [
        flexDirection: "column"
      ],
      
      &wrap: [
        flexWrap: "wrap"
      ],
      
      &nowrap: [
        flexWrap: "nowrap"
      ]
    ]
  ]
}

{
  grid: [
    div$grid: [
      columns: api.grid.columns || 1,
      gap: api.grid.gap || 16,
      children: api.grid.children
    ]
  ]
}

{
  grid$styles: [
    div$grid: [
      display: "grid",
      gap: api.grid.gap + "px",
      gridTemplateColumns: "repeat(" + api.grid.columns + ", 1fr)"
    ]
  ]
}